[tox]
env_list = py{312,311,310,39,38},typeguard,precommit,darglint,docs,spelling,coverage
recreate = True

# Run doctests and non-slow tests
[testenv]
deps =
    pytest
commands =
    python3 -I -m pytest src/jird --doctest-modules {posargs}
    python3 -I -m pytest tests -m 'not slow' {posargs}

# Run tests with typeguard for runtime type checking
[typeguard]
deps =
    pytest
    typeguard>=4.0
setenv =
    TYPEGUARD = true
commands = python3 -I -m pytest tests -m 'not slow and not bad_type' {posargs}

# Run slow tests, which are
#   - Property based tests with hypothesis
#   - Frequency checking tests which use a large grid of frequencies
[slow]
deps =
    pytest
    scipy
    hypothesis
commands = python3 -I -m pytest tests -m slow {posargs}

# Check test coverage
[coverage]
deps =
    pytest
    pytest-cov
commands = python3 -I -m pytest tests --cov=jird --cov-report term-missing --cov-fail-under=90

# Run pre-commit on all files
# See .pre-commit-config.yaml for list of checks.
[precommit]
deps = pre-commit
commands = pre-commit run --all-files

# Spellcheck docs
# Missing words can be added to docs/source/spelling_wordlist.txt
[spelling]
deps =
    sphinx-rtd-theme
    sphinxcontrib-spelling
setenv =
    SPHINXOPTS = -W --keep-going -b spelling
allowlist_externals = make
commands =
    make -C docs clean
    make -C docs html

# Check docstrings match function signatures
[darglint]
deps = darglint
commands =
    darglint -z short -s numpy --ignore-raise ValueError src

# Build docs
[docs]
deps =
    sphinx-rtd-theme
    sphinxcontrib-spelling
setenv =
    SPHINXOPTS = -W --keep-going
allowlist_externals = make
commands =
    make -C docs clean
    make -C docs html

# Build jird executable in a container (uses podman)
# This is compiled with nuitka
# Also builds surgepy, Python API for Surge XT synthesizer
# All bundled into a single-file executable written to build/jird
[build]
allowlist_externals =
    rm
    ./build_scripts/build_in_container.sh
commands =
    rm -rf .tox/.tmp
    ./build_scripts/build_in_container.sh

# Test installing dependencies and running jird in several containers
# Uses podman
[test_install]
allowlist_externals =
    ./tests/container_install_test/test_multiple.sh
commands =
    ./tests/container_install_test/test_multiple.sh
